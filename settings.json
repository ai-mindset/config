// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "telemetry": {
    "metrics": false,
    "diagnostics": false
  },

  "vim_mode": true,
  // Vim settings
  "vim": {
    "default_mode": "normal",
    "toggle_relative_line_numbers": true,
    "use_system_clipboard": "always",
    "use_multiline_find": false,
    "use_smartcase_find": false,
    "highlight_on_yank_duration": 200,
    "custom_digraphs": {},
    // Cursor shape for the each mode.
    // Specify the mode as the key and the shape as the value.
    // The mode can be one of the following: "normal", "replace", "insert", "visual".
    // The shape can be one of the following: "block", "bar", "underline", "hollow".
    "cursor_shape": {}
  },

  // UI settings
  "ui_font_size": 25,
  "buffer_font_size": 23,
  "theme": {
    "mode": "system",
    "light": "Ayu Light",
    "dark": "Ayu Dark"
  },
  "agent_font_size": 23,
  "auto_signature_help": true,
  "diagnostics": {
    "button": true,
    "include_warnings": true,
    "inline": {
      "enabled": true,
      "update_debounce_ms": 150,
      "padding": 4,
      "min_column": 0,
      "max_severity": null
    },
    "cargo": null
  },

  // Agent
  "agent": {
    "model_parameters": [],
    "default_model": {
      "provider": "ollama",
      "model": "devstral:latest"
    },
    "version": "2"
  },

  // Ollama
  // https://zed.dev/docs/ai/custom-api-keys#ollama-context
  "language_models": {
    "ollama": {
      "api_url": "http://localhost:11434",
      "available_models": [
        {
          "name": "devstral",
          "display_name": "Devstral",
          "max_tokens": 128000
        }
      ]
    }
  },
  // The default model to use when creating new threads.
  "default_model": {
    // The provider to use.
    "provider": "ollama",
    // The model to use.
    "model": "devstral"
  },
  // The model to use when applying edits from the agent.
  "editor_model": {
    // The provider to use.
    "provider": "ollama",
    // The model to use.
    "model": "devstral"
  },
  // Additional parameters for language model requests. When making a request to a model, parameters will be taken
  // from the last entry in this list that matches the model's provider and name. In each entry, both provider
  // and model are optional, so that you can specify parameters for either one.
  "model_parameters": [
    // To set parameters for all requests to OpenAI models:
    {
      "provider": "ollama",
      "temperature": 0.1
    }
  ],
  // When enabled, the agent can run potentially destructive actions without asking for your confirmation.
  "always_allow_tool_actions": false,
  // When enabled, the agent will stream edits.
  "stream_edits": false,
  // When enabled, agent edits will be displayed in single-file editors for review
  "single_file_review": true,
  // How to soft-wrap long lines of text.
  // Possible values:
  //
  // 1. Prefer a single line generally, unless an overly long line is encountered.
  //      "soft_wrap": "none",
  //      "soft_wrap": "prefer_line", // (deprecated, same as "none")
  // 2. Soft wrap lines that overflow the editor.
  //      "soft_wrap": "editor_width",
  // 3. Soft wrap lines at the preferred line length.
  //      "soft_wrap": "preferred_line_length",
  // 4. Soft wrap lines at the preferred line length or the editor width (whichever is smaller).
  //      "soft_wrap": "bounded",
  "soft_wrap": "none",
  // The column at which to soft-wrap lines, for buffers where soft-wrap
  // is enabled.
  "remove_trailing_whitespace_on_save": true,

  // The extensions that Zed should automatically install on startup.
  // If you don't want any of these extensions, add this field to your settings
  // and change the value to `false`.
  "auto_install_extensions": {
    "ruff": true,
    "julia": true,
    "zig": true,
    "toml": true,
    "dockerfile": true,
    "jsonnet": true,
    "latex": true
  },

  // Different settings for specific languages.
  "languages": {
    "Git Commit": {
      "allow_rewrap": "anywhere"
    },
    "HTML": {
      "prettier": {
        "allowed": true
      }
    },
    "XML": {
      "prettier": {
        "allowed": true,
        "plugins": ["@prettier/plugin-xml"]
      }
    },
    "JavaScript": {
      "language_servers": ["!typescript-language-server", "vtsls", "..."],
      "prettier": {
        "allowed": true
      }
    },
    "TypeScript": {
      "language_servers": ["!typescript-language-server", "vtsls", "..."],
      "prettier": {
        "allowed": true
      }
    },
    "JSON": {
      "prettier": {
        "allowed": true
      }
    },
    "JSONC": {
      "prettier": {
        "allowed": true
      }
    },
    "YAML": {
      "prettier": {
        "allowed": true
      }
    },
    "LaTeX": {
      "format_on_save": "on",
      "formatter": "language_server",
      "language_servers": ["texlab", "..."],
      "prettier": {
        "allowed": false
      }
    },
    "Markdown": {
      "format_on_save": "on",
      "use_on_type_format": false,
      "allow_rewrap": "anywhere",
      "soft_wrap": "editor_width",
      "prettier": {
        "allowed": true
      }
    },
    "SQL": {
      "prettier": {
        "allowed": true,
        "plugins": ["prettier-plugin-sql"]
      }
    },
    "Julia": {
      "format_on_save": "on",
      "use_on_type_format": false,
      "soft_wrap": "editor_width",
      "formatter": "language_server",
      "language_servers": ["LanguageServer", "..."],
      "prettier": {
        "allowed": true
      }
    },
    "Python": {
      "format_on_save": "on",
      "formatter": [
        {
          "code_actions": {
            "source.organizeImports.ruff": true,
            "source.fixAll.ruff": true
          }
        },
        {
          "language_server": {
            "name": "ruff"
          }
        }
      ],
      "language_servers": ["pyright", "ruff"]
    },
    "Zig": {
      "prettier": {
        "allowed": true,
        "plugins": ["zls", "..."]
      }
    }
  },

  // LSP
  "lsp": {
    "pyright": {
      "settings": {
        "python.analysis": {
          "diagnosticMode": "workspace",
          "typeCheckingMode": "strict"
        },
        "python": {
          "pythonPath": ".venv/bin/python"
        }
      }
    }
  }
}
